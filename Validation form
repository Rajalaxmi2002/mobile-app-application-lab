package com.example.valida;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {

    // two buttons
    Button bCancel, bProceed;

    // four text fields
    EditText etFirstName, age, etEmail, etPassword;

    // one boolean variable to check whether all the text fields
    // are filled by the user, properly or not.
    boolean isAllFieldsChecked = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // register buttons with their proper IDs.
        bProceed = findViewById(R.id.button1);
        bCancel = findViewById(R.id.bu2);

        // register all the EditText fields with their IDs.
        etFirstName = findViewById(R.id.editt1);
        age = findViewById(R.id.ed31);
        etEmail = findViewById(R.id.editt3);
        etPassword = findViewById(R.id.editt4);

        // handle the PROCEED button
        bProceed.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // store the returned value of the dedicated function which checks
                // whether the entered data is valid or if any fields are left blank.
                isAllFieldsChecked = CheckAllFields();

                // If all fields are valid, proceed to the next activity
                if (isAllFieldsChecked) {
                    Intent i = new Intent(MainActivity.this, MainActivity.class);
                    startActivity(i);
                }
            }
        });

        // if the user presses the cancel button, then close the
        // application or the particular activity.
        bCancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
                System.exit(0);
            }
        });
    }

    // function which checks all the text fields
    // are filled or not by the user.
    // when the user clicks on the PROCEED button
    // this function is triggered.
    private boolean CheckAllFields() {
        if (etFirstName.length() == 0) {
            etFirstName.setError("This field is required");
            return false;
        }

        if (age.length() == 0) {
            age.setError("Age is required");
            return false;
        } else if (!isAgeValid(age.getText().toString())) {
            age.setError("Invalid age");
            return false;
        }

        if (etEmail.length() == 0) {
            etEmail.setError("Email is required");
            return false;
        } else if (!isEmailValid(etEmail.getText().toString())) {
            etEmail.setError("Invalid email address");
            return false;
        }

        if (etPassword.length() == 0) {
            etPassword.setError("Password is required");
            return false;
        } else if (etPassword.length() < 8) {
            etPassword.setError("Password must be minimum 8 characters");
            return false;
        } else if (!isPasswordValid(etPassword.getText().toString())) {
            etPassword.setError("Password must contain at least one uppercase letter, one lowercase letter, and one digit");
            return false;
        }

        // All validations passed, return true.
        return true;
    }

    // Email validation using a regular expression
    private boolean isEmailValid(String email) {
        String emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
        return email.matches(emailPattern);
    }

    // Password validation with at least one uppercase, one lowercase, one digit, and min length 8
    private boolean isPasswordValid(String password) {
        String passwordPattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$";
        return password.matches(passwordPattern);
    }

    // Age validation: Check if it's a valid number and within a specific range
    private boolean isAgeValid(String ageStr) {
        try {
            int ageValue = Integer.parseInt(ageStr);
            return ageValue >= 18 && ageValue <= 100; // Modify the age range as needed
        } catch (NumberFormatException e) {
            return false; // Not a valid number
        }
    }
}
